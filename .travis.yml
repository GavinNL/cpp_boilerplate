language: cpp

matrix:
  include:

  # OSX / Clang

  - os: linux
    compiler: gcc
    env:
    - COMPILER=g++-7
    - COMPILER_CC=gcc-7
    - COMPILER_CXX=g++-7
    - CONAN_SETTINGS_FLAG=""
    - CMAKE_GENERATOR_FLAG=""
    - ENABLE_COVERAGE=TRUE
    - ENABLE_TESTS=TRUE
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['gcc-7', 'g++-7' ]

  - os: windows
    env:
    - CONAN_SETTINGS_FLAG="-s compiler=\"Visual Studio\" -s compiler.version=15 -s arch=x86_64 "
    - CMAKE_GENERATOR_FLAG="-G \"Visual Studio 15 2017 Win64\" "
    - ENABLE_COVERAGE=FALSE
    - ENABLE_TESTS=TRUE
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['gcc-7', 'g++-7' ]

install:
  - |
     if [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
       choco install conan
     else
       pip install --user --upgrade pip
       pip install --user conan --upgrade
     fi

script:
  - env
  - if [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then export PATH=$PATH:/c/Program\ Files/Conan/conan; fi

  - if [[ "${ENABLE_COVERAGE}" == "TRUE" ]]; then export COVERAGE_FLAGS='-DCPPBOILERPLATE_ENABLE_COVERAGE:BOOL=TRUE'; fi
  - if [[ "${ENABLE_TESTS}" == "TRUE" ]]; then export TEST_FLAGS='-DCPPBOILERPLATE_BUILD_TESTS:BOOL=TRUE'; fi

  - conan user
  - conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
  - mkdir build && cd build
  - eval conan install --build missing ${CONAN_SETTINGS_FLAG} ..
  - eval cmake .. ${CMAKE_GENERATOR_FLAG} ${COVERAGE_FLAGS} ${TEST_FLAGS}
  - eval cmake --build . --config "Release"
  - if [[ "${ENABLE_TESTS}" == "TRUE" ]]; then ctest; fi
